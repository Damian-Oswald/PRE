% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateFluxes.R
\name{calculateFluxes}
\alias{calculateFluxes}
\title{Calculate fluxes from measurement data}
\usage{
calculateFluxes(
  data = getMissing(),
  parameters = PRE::getParameters(),
  verbose = TRUE
)
}
\arguments{
\item{data}{Measurement data from which one wants to calculate fluxes. This needs to be a \code{data.frame} which includes variables \code{date}, \code{column}, \code{depth}, \code{increment}, \code{moisture}, \code{N2O}, \code{SP}, and \code{d18O}. For further details and a reference data frame, read the description of the \code{\link{measurements}} data.}

\item{parameters}{A set of parameters as returned by the function \code{\link{getParameters}}. These will be used in calculating the returned flux data.}

\item{verbose}{Logical. Should a progress bar be printed?}
}
\description{
This function calculates nitrous oxide fluxes and other parameters from pre-processed measurement data (see \link{getMissing} for more information on the pre-processing).
}
\details{
This function calculates a range of parameters and variables according to the equations listed below.
First, the mean moisture between two depth increments \eqn{\theta_w} is calculated.
\deqn{\theta_{w} = \frac{1}{2}(m_d + m_{d+1})}
From this, the air-filled pore space is computed.
\deqn{\theta_{a} = 1-\frac{\theta_{w}}{\theta_{t}}}
In a next step, the Gas diffusion coefficient is calculated \insertCite{millington1961permeability}{PRE}.
\deqn{D_{\text s} = \left( \frac{\theta_w^{10/3} + D_{\text fw}}{H} + \theta_a^{10/3} \times D_{\text fa} \right) \times \theta_T^{-2}}
Note that the diffusivity of N₂O in air \eqn{D_{\text fa}} is a fixed value that is computed by the \link{getParameters} function.
With all of these values prepared, the N₂O gradient (\eqn{\frac{dC}{dZ}}) is computed.
\eqn{dC} is the change of N₂O concentration from one layer to the next, while \eqn{dZ} is the vertical distance from one measurement depth to the next.
The atmospheric nitrous oxide concentration is once again passed by the \link{getParameters} function.
Finally, the N₂O flux is calculated.
\deqn{F_{\text{calc}} = \frac{dC}{dZ} D_{\text s} \rho}
Here, \eqn{\rho} is the gas density of N₂O. This variable is split into "in" and "out" fluxes from the top and bottom layer. For the top layer, a fixed \eqn{F_{\text{top,in}}} is assumed which is passed by \link{getParameters}. In the lowest layer, \eqn{F_{\text{bottom,in}}} is assumed to be zero.
}
\examples{
# load the parameters with an alternative parameter value
parameters <- getParameters(BD = 1.7)

# calculate N2O-N
data <- getN2ON(data = PRE::measurements, parameters = parameters)

# interpolate the missing values based on the bandwidths in `hyperparameters` (This function interpolates all values over time; and it also computes and adds the derivatives)
data <- getMissing(data = data, hyperparameters = PRE::hyperparameters)

# calculate fluxes from measurement data (This function calculates all necessary parameters from the data)
data <- calculateFluxes(data = data, parameters = parameters)

# look at the resulting data frame
View(data)

}
\references{
\insertAllCited{}
}
